#!/bin/bash

PATHNAME=$@

if [[ ! -n $PATHNAME ]]; then
  echo "fatal: file not specified"
  exit 1
elif [[ ! -e $PATHNAME ]]; then
  echo "fatal: file does not exist"
  exit 1
fi

echo "Searching for path: \"${PATHNAME}\" in remote branches."

git fetch --prune >/dev/null 2>/dev/null
git checkout master >/dev/null 2>/dev/null
git pull --rebase >/dev/null 2>/dev/null
REMOTE_BRANCHES=$(git for-each-ref --format="%(refname:short)" | grep -E -v "(stash|master|HEAD)" | sed 's/.*\///g' | sort -u)
LOCAL_BRANCHES=$(git branch --format="%(refname:short)" | sort)

# checkout all branches locally
echo "Checking out all remote branches locally."
for remote_branch in $REMOTE_BRANCHES; do
  git checkout $remote_branch >/dev/null 2>/dev/null
done
git checkout master >/dev/null 2>/dev/null

# search for file
BRANCHES=$(git for-each-ref --format="%(refname:short)" refs/heads | grep -v master | while read br; do
  git cherry master $br | while read x h; do 
    if [ "$(git log -n 1 --format=%H $h -- $PATHNAME)" = "$h" ]; then echo $br; fi;
  done;
done | sort -u | xargs echo -n)

# cleanup
echo "Deleting all checked out branches."
for remote_branch in $REMOTE_BRANCHES; do
  SKIP="false"
  for local_branch in $LOCAL_BRANCHES; do
    if [ $remote_branch == $local_branch ]; then SKIP="true"; fi
  done
  if [ $SKIP == "false" ]; then
    git branch -D $remote_branch >/dev/null 2>/dev/null
  fi
done

# print results
if [ -n "$BRANCHES" ]; then
  echo "Path \"${PATHNAME}\" was modified in the following branches:"
  for branch in $BRANCHES; do
    echo " - $branch"
  done
  RETVAL=0
else
  echo "Path \"${PATHNAME}\" was not modified in any of the remote branches."
  RETVAL=1
fi

exit $RETVAL
